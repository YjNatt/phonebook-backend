{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","components/Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","name","setNameSearch","value","onChange","event","target","baseURL","personService","create","number","person","axios","post","then","request","data","getAll","get","deleteById","id","delete","status","update","put","PersonForm","props","onSubmit","preventDefault","newName","trim","newNumber","persons","some","message","window","confirm","confirmUpdate","find","updatedPerson","index","findIndex","personsCopy","splice","setPersons","setNewMessage","success","setTimeout","catch","error","text","filter","concat","console","log","response","setNewName","setNewNumber","type","Persons","personsToShow","deleteHandle","dataset","copy","Number","map","onClick","Notifications","messageStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","style","App","useState","nameSearch","useEffect","retrievedPersons","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.233bdfac.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ name, setNameSearch}) => {\n  const searchHandle = (event) => {\n    setNameSearch(event.target.value);\n  }\n\n  return (\n    <div>\n      <label >Filter shown with </label>\n      <input value={name} onChange={searchHandle}/>\n    </div>\n  )\n};\n\nexport default Filter","import axios from 'axios'\n\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseURL)\n              .then(request => request.data);\n};\n\nconst create = (name, number) => {\n  const person = { name, number };\n  const request = axios.post(baseURL, person);\n  return request.then(request => request.data);\n};\n\nconst deleteById = (id) => {\n  return axios.delete(`${baseURL}/${id}`)\n              .then(request => request.status);\n\n}\n\nconst update = (person, number) => {\n  const {id, name} = person\n  return axios.put(`${baseURL}/${id}`, { name, number })\n              .then(request => {\n                return request.data;\n              });\n}\n\nconst personService = { create, getAll, deleteById, update };\n\nexport default personService;","import React from 'react';\nimport personService from '../services/persons';\n\nconst confirmUpdate = (name) => {\n  const message = `${name} is already added to phonebook,` +\n                  'replace the old number with the new one?'\n\n  return window.confirm(message);\n};\n\nconst PersonForm = (props) => {\n  const nameHandle = (event) => {\n    props.setNewName(event.target.value);\n  }\n\n  const numberHandle = event => {\n    props.setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const name = props.newName.trim();\n    const number = props.newNumber.trim();\n\n    if (props.persons.some(person => person.name === name)) {\n      if (!confirmUpdate(name)) {\n        return\n      }\n\n      const person = props.persons.find(person => person.name === name);\n\n      personService.update(person, number)\n                   .then(updatedPerson => {\n                     const index = props.persons.findIndex(person => {\n                       return person.id === updatedPerson;\n                     });\n\n                     const personsCopy = [...props.persons];\n                     personsCopy.splice(index, 1, updatedPerson);\n                     props.setPersons(personsCopy);\n                     props.setNewMessage({ success: `Updated ${name}`});\n                     setTimeout(() => {\n                       props.setNewMessage(null);\n                     }, 3000);\n                   })\n                   .catch(error => {\n                     const text = `Information of ${name} has already been removed from server`;\n                     props.setPersons(props.persons.filter(({id}) => id !== person.id))\n                     props.setNewMessage({ error: text });\n                     setTimeout(() => {\n                       props.setNewMessage(null);\n                     }, 3000);\n                   });\n    } else {\n      personService.create(name, number)\n                   .then(person => {\n                     props.setPersons(props.persons.concat(person));\n                     props.setNewMessage({ success: `Added ${name}`});\n                     setTimeout(() => {\n                       props.setNewMessage(null);\n                     }, 3000)\n                   })\n                   .catch(error => {\n                     console.log(error.response.data)\n                     props.setNewMessage(error.response.data);\n                     setTimeout(() => {\n                       props.setNewMessage(null);\n                     }, 3000)\n                   });\n\n      props.setNewName('');\n      props.setNewNumber('');\n    }\n  }\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={nameHandle}/>\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={numberHandle} />\n      </div>\n      <div>\n        <button type=\"submit\" >add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react';\nimport personService from '../services/persons';\n\nconst Persons = ({ personsToShow, persons, setPersons }) => {\n  const deleteHandle = (event) => {\n    const id = event.target.dataset.id;\n    const person = persons.find(person => person.id === id);\n    if (!window.confirm(`Delete ${person.name}`)) {\n      return\n    }\n\n    personService.deleteById(id)\n                .then(status => {\n                  if (status === 204) {\n                    const copy = [...persons];\n                    const index = copy.findIndex(person => person.id === Number(id));\n                    copy.splice(index,1);\n                    setPersons(copy);\n                  }\n                });\n  }\n\n  return (\n    <div>\n      {personsToShow.map(person => {\n        return (\n        <p key={person.id}>\n          {person.name} {person.number}\n          <button data-id={person.id} onClick={deleteHandle}>delete</button>\n        </p>\n        )\n      })}\n    </div>\n  );\n};\n\nexport default Persons","import React from 'react';\n\nconst Notifications = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  const messageStyle = {\n    background: \"lightgray\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  }\n  if (message.success) {\n    messageStyle.color = 'green';\n  } else if (message.error) {\n    messageStyle.color = 'red';\n  }\n\n  return (\n    <div style={messageStyle}>\n      {message.success || message.error}\n    </div>\n  );\n}\n\nexport default Notifications","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personService from '../src/services/persons';\nimport Notifications from './components/Notifications';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ nameSearch, setNameSearch ] = useState('');\n  const [ message, setNewMessage ] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n                 .then(retrievedPersons => setPersons(retrievedPersons));\n  }, [])\n\n  let personsToShow;\n  if (nameSearch === '') {\n    personsToShow = persons;\n  } else {\n    personsToShow = persons.filter(({name}) => {\n      return name.toLowerCase().includes(nameSearch.toLowerCase());\n    });\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={message}/>\n      <Filter name={nameSearch} setNameSearch={setNameSearch}/>\n      <PersonForm\n        setNewMessage={setNewMessage}\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        personsToShow={personsToShow}\n        setPersons={setPersons}\n        persons={persons}\n        setNewMessage={setNewMessage}\n      />\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}